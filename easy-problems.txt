-- 175. Combine Two Tables

select p.firstName, p.lastName, a.city, a.state
from person p
left join address a
on p.personId = a.personId;

-- 181. Employees Earning More Than Their Managers

select e1.name as Employee
from employee e1
inner join employee e2
on e1.managerId=e2.id
where e1.salary>e2.salary;

-- 182. Duplicate Emails

select email
from person
group by email
having count(*)>1;

-- 183. Customers Who Never Order

select c.name as Customers
from customers c
left join orders o
on c.id=o.customerId
where o.id is null;

-- 196. Delete Duplicate Emails

delete
from person
where id not in
(
  select min(id)
  from person
  group by email
);

-- 197. Rising Temperature

select w2.id
from weather w1
left join weather w2
on w1.recordDate + 1 = w2.recordDate
where w2.temperature>w1.temperature;

-- 511. Game Play Analysis I

select player_id, min(event_date)::date as first_login
from activity
group by player_id;

-- 512. Game Play Analysis II

select a.player_id, a.device_id
from activity a
where (a.player_id, event_date) in
(
  select a1.player_id, min(a1.event_date) as first_login
  from activity a1
  group by a1.player_id
)

-- 577. Employee Bonus

select e.name, b.bonus
from employee e
left join bonus b
on e.empId = b.empId
where b.bonus < 1000 or b.bonus is null;

-- 584. Find Customer Referee

select name
from customer
where referee_id != 2 or referee_id is null;

-- 586. Customer Placing the Largest Number of Orders

with cte as
(
    select customer_number, count(order_number) as order_number
    from orders
    group by customer_number
    order by order_number desc
)

select customer_number
from cte
where rownum=1;

-- 595. Big Countries

select name, population, area
from world
where area >= 3000000 or population >= 25000000;

-- 596. Classes More Than 5 Students

select class
from courses
group by class
having count(student)>=5;

-- 597. Friend Requests I: Overall Acceptance Rate

with cte as
(
    select distinct sender_id, send_to_id, requester_id, accepter_id
    from friendrequest f
    full outer join requestaccepted r
    on f.sender_id = r.requester_id and f.send_to_id = r.accepter_id
)

select round(count(requester_id)/(case when count(sender_id)=0 then 1 else count(sender_id) end), 2) as accept_rate
from cte;

-- 603. Consecutive Available Seats

select distinct c1.seat_id
from cinema c1
join cinema c2
on abs(c1.seat_id-c2.seat_id)=1 and c1.free=1 and c2.free=1
order by 1;

-- 607. Sales Person

select name
from salesperson
where sales_id not in
(
    select sales_id
    from orders o
    left join company c
    on o.com_id=c.com_id
    where c.name='RED'
);

-- 610. Triangle Judgement

select x, y, z, (case when (x+y>z and x+z>y and y+z>x) then 'Yes' else 'No' end) as triangle
from triangle;

-- 613. Shortest Distance in a Line

select min(abs(p1.x-p2.x)) as shortest
from point p1
join point p2
on p1.x<p2.x

-- 619. Biggest Single Number

select max(num) as num
from
(select num, count(*) as n_num
from mynumbers
group by num
having count(*) = 1
order by num desc)
where rownum=1

-- 620. Not Boring Movies

select *
from cinema
where mod(id, 2)!=0 and description != 'boring'
order by rating desc;

-- 627. Swap Salary

update salary
set sex=
    case when sex='m' then 'f' else 'm' end;

-- 1050. Actors and Directors Who Cooperated At Least Three Times

select actor_id, director_id
from actordirector
group by actor_id, director_id
having count(*)>=3;

-- 1068. Product Sales Analysis I

select p.product_name, s.year, s.price
from sales s
join product p
on s.product_id = p.product_id;

-- 1069. Product Sales Analysis II

select product_id, sum(quantity) as total_quantity
from sales
group by product_id;

-- 1075. Project Employees I

select p.project_id, round(avg(experience_years), 2) as average_years
from project p
left join employee e
on p.employee_id = e.employee_id
group by p.project_id;

-- 1076. Project Employees II

select project_id
from
(
    select project_id, rank() over(order by count(*) desc) as cnt
    from project
    group by project_id
    order by count(*) desc
)
where cnt=1;

-- 1082. Sales Analysis I

select seller_id
from
(
select seller_id,
    rank() over(order by sum(price) desc) as pri
from sales
group by seller_id
order by pri desc
)
where pri=1

-- 1083. Sales Analysis II

with cte as
(
select s.buyer_id, p.product_name
from sales s
join product p
on p.product_id=s.product_id
where product_name='iPhone'
)

select distinct buyer_id
from sales s
join product p
on p.product_id=s.product_id
where p.product_name='S8' and s.buyer_id not in (select buyer_id from cte);

-- 1084. Sales Analysis III

select distinct s.product_id, p.product_name
from sales s
left join product p
on s.product_id=p.product_id
group by s.product_id, p.product_name
having min(sale_date)>='2019-01-01' and max(sale_date)<='2019-03-31';

-- 1113. Reported Posts

select extra as report_reason, count(distinct post_id) as report_count
from actions
where (action_date = to_date('2019-07-05', 'yyyy-mm-dd') - 1) and (action='report')
group by extra

-- 1141. User Activity for the Past 30 Days I

select to_char(activity_date, 'yyyy-mm-dd') as day, count(distinct user_id) as active_users
from activity
where activity_date between to_date('2019-07-27', 'yyyy-mm-dd') - 29 and to_date('2019-07-27', 'yyyy-mm-dd')
group by activity_date
order by 1;

-- 1148. Article Views I

select distinct author_id as id
from views
where author_id=viewer_id
order by 1;

-- 1211. Queries Quality and Percentage

select query_name, round(sum(rating/position)/count(query_name), 2) as quality,
        round(count(case when rating<3 then rating end)/count(rating)*100, 2) as poor_query_percentage
from queries
where query_name is not null
group by query_name;

-- 1251. Average Selling Price

select p.product_id, coalesce(round(sum(p.price*u.units)/sum(u.units), 2), 0) as average_price
from prices p
left join unitssold u
on p.product_id = u.product_id and u.purchase_date between start_date and end_date
group by p.product_id

-- 1280. Students and Examinations

with cte as
(
    select *
    from students s
    cross join subjects s
)

select c.student_id, c.student_name, c.subject_name, (case when e.student_id is null then 0 else count(*) end) as attended_exams
from cte c
left join examinations e
on c.student_id = e.student_id and c.subject_name = e.subject_name
group by c.student_id, c.student_name, c.subject_name, e.student_id
order by c.student_id, c.subject_name;

-- 1327. List the Products Ordered in a Period

select p.product_name, u.unit
from products p
join
(
    select product_id, sum(unit) as unit
    from orders
    where extract(month from order_date)=2 and
            extract(year from order_date)=2020
    group by product_id
) u
on p.product_id=u.product_id
where unit>=100;

-- 1378. Replace Employee ID With The Unique Identifier

select u.unique_id as unique_id, e.name as name
from employees e
left join employeeUNI u
on e.id = u.id

-- 1484. Group Sold Products By The Date

select to_char(sell_date, 'yyyy-mm-dd') as sell_date, count(*) as num_sold, listagg(product, ',') within group(order by product) as products
from
(
    select distinct sell_date, product
    from activities
)
group by sell_date;

-- 1517. Find Users With Valid E-Mails

select *
from users
where regexp_like(mail, '^[A-Za-z][A-Za-z0-9._-]*@leetcode\.com$');

-- 1527. Patients With a Condition

select patient_id, patient_name, conditions
from patients
where regexp_like(conditions, '(^| )DIAB1');

-- 1581. Customer Who Visited but Did Not Make Any Transactions

select v.customer_id, count(*) as count_no_trans
from visits v
left join transactions t
on v.visit_id = t.visit_id
where t.transaction_id is null
group by v.customer_id;

-- 1633. Percentage of Users Attended a Contest

select contest_id, round((count(*) / (select count(*) from users) * 100), 2) as percentage
from register
group by contest_id
order by 2 desc, 1 asc;

-- 1661. Average Time of Process per Machine

with cte as
(
  select machine_id, activity_type, sum(timestamp) dura,
  (case when activity_type='start' then (-sum(timestamp)) else sum(timestamp) end) as t_dura, count(*) t_times
  from activity
  group by machine_id, activity_type
)

select machine_id, round(sum(t_dura)/avg(t_times), 3) as processing_time
from cte
group by machine_id;

-- 1667. Fix Names in a Table

select user_id, upper(substr(name, 1, 1))||lower(substr(name, 2)) name
from users
order by user_id;

-- 1683. Invalid Tweets

select tweet_id
from tweets
where length(content) > 15;

-- 1729. Find Followers Count

select user_id, count(follower_id) as followers_count
from followers
group by user_id
order by user_id

-- 1731. The Number of Employees Which Report to Each Employee

with cte as
(
    select reports_to, count(*) as reports_count, round(avg(age)) as average_age
    from employees
    where reports_to is not null
    group by reports_to
)

select e.employee_id, e.name, c.reports_count, average_age
from employees e
join cte c
on e.employee_id=c.reports_to
order by 1;

-- 1757. Recyclable and Low Fat Products

select product_id
from products
where low_fats = 'Y' and recyclable = 'Y';

-- 1789. Primary Department for Each Employee

select employee_id, department_id
from
(
    select employee_id, department_id, primary_flag, count(*) over(partition by employee_id) as cnt
    from employee
)
where cnt=1 or primary_flag='Y';

-- 1978. Employees Whose Manager Left the Company

select employee_id
from employees
where salary<30000 and
        manager_id is not null and
        manager_id not in (select employee_id from employees)
order by employee_id;

-- 2356. Number of Unique Subjects Taught by Each Teacher

select teacher_id, count(distinct subject_id) as cnt
from teacher
group by teacher_id;

